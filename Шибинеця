import random
import pygame

pygame.init()

FPS = pygame.time.Clock()

screensize = weidth, heidt = 1000, 700  # задає розміри вікна
pygame.display.set_caption('Шибениця')  # дає ім'я вікну
play_screan = pygame.display.set_mode((weidth, heidt))  # створює ігрове вікно

# задає задній фон вікна
bg = pygame.transform.scale(pygame.image.load('fon1.jpg').convert(), screensize)

BLACK = 0, 0, 0
BRAUN = 152, 118, 84
YELLOW = 255, 254, 205
RED = 255, 0, 0
lybrary = ['яблоко', 'небо', 'зорі', 'паніка', 'альбом']
alphabet = ['А', 'Б', 'В', 'Г', 'Ґ', 'Д', 'Е', 'Є', 'Ж', 'З', 'И', 'І', 'Ї', 'Й', 'К', 'Л',
            'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ь', 'Ю', 'Я']

word_p = str(random.choice(lybrary))
word = word_p.upper()
user_letters = set()
count_try = 10
gallows_weidth = weidth/8
gallows_heidth = (heidt-heidt/8)
rad = 35


# створює певні частини тіла відповідно до переданих класу параметрів
class Body:
    def __init__(self, name, screen, h_collor, h_coord=None, radius=None, start=None, end=None, thickness=None):
        self.screen = screen
        self.h_collor = h_collor
        self.h_coord = h_coord
        self.radius = radius
        self.name = name
        self.start = start
        self.end = end
        self.thickness = thickness
        if self.name == 'rect':
            pygame.draw.rect(self.screen, self.h_collor, self.h_coord)
        if self.name == 'circle':
            pygame.draw.circle(self.screen, self.h_collor, self.h_coord, self.radius)
        if self.name == 'ellipse':
            pygame.draw.ellipse(self.screen, self.h_collor, (self.h_coord, self.radius))
        if self.name == 'line':
            pygame.draw.line(self.screen, self.h_collor, self.start, self.end, self.thickness)


x_button_start = weidth / 2
x_button = x_button_start
y_button_start = heidt/2
y_button = y_button_start
button_images = 'button.png'

font = pygame.font.SysFont('Arial', 30)
font_word = pygame.font.SysFont('Arial', 50)

objects = []


# Клас для створення кнопок алфавіту
class Button:
    def __init__(self, x, y, width, height, buttonText, onclickFunction=None, onePress=False):
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.onclickFunction = onclickFunction
        self.onePress = onePress
        self.alreadyPressed = False
        self.buttonText = buttonText

        self.fillColors = {
            'normal': '#ffffff',
            'hover': '#666666',
            'pressed': '#333333',
            'wrong': '#FF0000'
        }

        self.buttonSurface = pygame.Surface((self.width, self.height))
        self.buttonRect = pygame.Rect(self.x, self.y, self.width, self.height)

        self.buttonSurf = font.render(buttonText, True, (20, 20, 20))

        self.alreadyPressed = False

        objects.append(self)

    def process(self):

        global user_letters
        mousepos = pygame.mouse.get_pos()

        if self.buttonText not in word and self.buttonText in user_letters:
            self.buttonSurface.fill(self.fillColors['wrong'])
        else:
            self.buttonSurface.fill(self.fillColors['normal'])

        if self.buttonRect.collidepoint(mousepos) and self.buttonText not in user_letters:
            self.buttonSurface.fill(self.fillColors['hover'])

            if pygame.mouse.get_pressed(num_buttons=3)[0]:
                self.buttonSurface.fill(self.fillColors['pressed'])

                if not self.alreadyPressed:
                    user_letters.update(set(self.buttonText))
                    self.alreadyPressed = True

            else:
                self.alreadyPressed = False

        self.buttonSurface.blit(self.buttonSurf, [
            self.buttonRect.width / 2 - self.buttonSurf.get_rect().width / 2,
            self.buttonRect.height / 2 - self.buttonSurf.get_rect().height / 2
        ])
        play_screan.blit(self.buttonSurface, self.buttonRect)


def search():
    global win
    global missed
    answer = ''

    for i in word:
        if i in user_letters:
            answer += i
            answer += ' '

        else:
            answer += '_'
            answer += ' '
            win += 1

    for y in user_letters:
        if y not in word:
            missed += 1

    return [str(answer), missed]


button_size = 50
gap = 10

for letter in alphabet:
    name_letter = Button(x_button, y_button, button_size, button_size, letter)
    if x_button + gap >= weidth - button_size * 2:
        y_button += (button_size + gap)
        x_button = x_button_start

    else:
        x_button += (button_size + gap)

loser2 = pygame.transform.scale(pygame.image.load('lose2.png').convert_alpha(), (weidth, heidt))
winer = pygame.transform.scale(pygame.image.load('winer.png').convert_alpha(), (weidth/3, weidth/2*1.1))


done = True

while done:
    FPS.tick(60)
    play_screan.blit(bg, (0, 0))  # створює фон вікна
    win = 0
    # вихід з програми при натисканні червоного "хрестика"
    for e in pygame.event.get():
        if e.type == pygame.QUIT:
            done = False

    for v in objects:
        v.process()

    missed = 0
    search_ret = search()

    play_screan.blit(font_word.render(search_ret[0], True, BLACK), (weidth / 2, heidt / 8))

    '''Наступний блок передає параметри класу Body, який, в свою чергу, при його виклику відмальовує
    певні частини шибениці.'''
    # ЗЕМЛЯ
    if search_ret[1] > 0:
        Body('rect', play_screan, BLACK, ((gallows_weidth, gallows_heidth), (weidth*0.3, heidt*0.03)))

    # ДЕРЕВО
    if search_ret[1] > 1:
        Body('rect', play_screan, BLACK,
             ((gallows_weidth-heidt*0.03, gallows_heidth-heidt*0.7+heidt*0.03), (heidt*0.03, heidt*0.7)))

    # ГІЛКА
    if search_ret[1] > 2:
        Body('rect', play_screan, BLACK,
             ((gallows_weidth, gallows_heidth-heidt*0.7+heidt*0.03), (weidth*0.15, heidt*0.03)))

    # МОТУЗКА
    if search_ret[1] > 3:
        Body('rect', play_screan, BRAUN,
             h_coord=((gallows_weidth + weidth * 0.15, gallows_heidth - heidt * 0.7 + heidt * 0.03),
                      (heidt * 0.03 / 4, heidt * 0.7 / 4)))

    # ГОЛОВА
    if search_ret[1] > 4:
        Body('circle', play_screan, YELLOW,
             h_coord=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8,
                      gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad),
             radius=rad)

    # ТУЛУБ
    if search_ret[1] > 5:
        Body('ellipse', play_screan, YELLOW,
             h_coord=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8 - rad / 4,
                      gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 1.9),
             radius=(rad / 2, rad * 3))

    # ПРАВА РУКА
    if search_ret[1] > 6:
        Body('line', play_screan, YELLOW,
             start=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8,
                    gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 2.25),
             end=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8 - rad,
                  gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 3.25),
             thickness=10)

    # ЛІВА РУКА
    if search_ret[1] > 7:
        Body('line', play_screan, YELLOW,
             start=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8,
                    gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 2.25),
             end=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8 + rad,
                  gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 3.25),
             thickness=10)

    # ЛІВА НОГА
    if search_ret[1] > 8:
        Body('line', play_screan, YELLOW,
             start=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8,
                    gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 4.6),
             end=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8 - rad,
                  gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 6),
             thickness=10)

    # ПРАВА НОГА
    if search_ret[1] > 9:
        Body('line', play_screan, YELLOW,
             start=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8,
                    gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 4.6),
             end=(gallows_weidth + weidth * 0.15 + heidt * 0.03 / 8 + rad,
                  gallows_heidth - heidt * 0.7 + heidt * 0.7 / 4 + rad * 6),
             thickness=10)

    if search_ret[1] > 9:
        objects = []
        play_screan.blit(loser2, (0, 0 - heidt / 4))
        los = font_word.render('Загадане слово: %s' % word, True, BLACK)
        play_screan.blit(los, (weidth/4, heidt/2))

    if win == 0:
        objects = []
        play_screan.blit(winer, (weidth / 16, heidt / 8))
        win = font_word.render('ВІТАЄМО, ВИ ВИГРАЛИ ! ! !', True, RED)
        play_screan.blit(win, (weidth / 2.5, heidt / 2))

    pygame.display.flip()
